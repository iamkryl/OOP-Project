import java.util.Random;
import java.util.Scanner;

public class SiCS extends Kingdom {
    private Kamadan kamadan;
    private Altreia altreia;

    public SiCS(Kamadan kamadan, Altreia altreia) {
        super("Si CS", kamadan, altreia); 
        this.kamadan = kamadan; 
        this.altreia = altreia; 
    }

    private void simulateTyping(String message) {
        for (char c : message.toCharArray()) {
            System.out.print(c);
            try {
                Thread.sleep(0); 
            } catch (InterruptedException e) {
                System.err.println("An error occurred during the delay.");
            }
        }
        System.out.println();
    }

    private static void upgrade() {
        System.out.println("You have leveled up! Choose an upgrade:");
        System.out.println("1. Increase MAXIMUM HEALTH (+50)");
        System.out.println("2. Increase MAXIMUM MANA (+50)");

        System.out.print("Enter your choice: ");
    }

    private static void resetStats(Kamadan objKamadan, Altreia objAltreia, Shang objShang){
        objKamadan.setHealth(250);
        objKamadan.setMana(200);
        objAltreia.setHealth(230);
        objAltreia.setMana(250);
        objShang.setHealth(280);
        objShang.setMana(250);
    }

    @Override
    public void enter() {
        System.out.println("\t\t\t\tWelcome to " + name + ", the land of coding challenges!");
    }

    @Override
        public void startQuest(){
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();
        StoryLine objStoryLine = new StoryLine();
        Altreia objAltreia = getAltreia();
        Kamadan objKamadan = getKamadan();
        Khaiamanan objKhaiamanan = new Khaiamanan();
        Shang objShang = new Shang();
        Main objMain = new Main();
        ThirdStreet objThirdStreet = new ThirdStreet(objKamadan, objAltreia);
        SiITYou objSiITYou = new SiITYou(objKamadan, objAltreia);
        SiCS objSiCS = new SiCS(objKamadan, objAltreia);
        Palangga objPalangga = new Palangga();

        int choiceCharacter = 0;

        
        while (objKhaiamanan.getHealth() > 0) {
            int roundCounter = 1;

            choiceCharacter = 0;

            while (objKhaiamanan.getHealth() > 0 && (objKamadan.getHealth() > 0 || objAltreia.getHealth() > 0 || objShang.getHealth() > 0)) {
                System.out.println("\n----------------------------------------------------------------------------------------------------------------------------");
                System.out.print("|      Kamadan's HP: " + objKamadan.getHealth() + "    | Mana: " + objKamadan.getMana() + "     | Syntax Sleuth | Logic Master         | Loop Ninja       | Mana Regeneration  |");
                System.out.println("\n----------------------------------------------------------------------------------------------------------------------------");
                System.out.print("|      Altreia's HP: " + objAltreia.getHealth() + "    | Mana: " + objAltreia.getMana() + "     | Code Catalyst | Focus Shield         | Syntax Strike    | Mana Regeneration  |");
                System.out.println("\n----------------------------------------------------------------------------------------------------------------------------");
                System.out.print("|      Shang's HP: " + objShang.getHealth() + "      | Mana: " + objShang.getMana() + "       | Barrier Boost | Skill Swap         | Pathfinder         | Mana Regeneration  |");
                System.out.println("\n----------------------------------------------------------------------------------------------------------------------------");
                System.out.print("|      Palangga's HP: " + objPalangga.getHealth() + "  | Mana: " + objPalangga.getMana() + "    | LoveyDovey    | Nikaon Naka, Langga? | Tulog Na, Langga | I Love You, Langga |");
                System.out.println("\n----------------------------------------------------------------------------------------------------------------------------");

                while (true) {
                    if(roundCounter > 1){
                    System.out.println("\nChoose your character to attack for the next round:");
                    }else{
                        System.out.println("\nChoose your character to attack:");
                    }
                        System.out.println("1. Kamadan");
                        System.out.println("2. Altreia");
                        System.out.println("3. Shang");
                        System.out.println("4. Palangga");
                
                    try {
                        System.out.print("Enter choice (1 or 2 or 3 or 4): ");
                        choiceCharacter = scanner.nextInt();
                        if ((choiceCharacter == 1 && objKamadan.getHealth() > 0) || (choiceCharacter == 2 && objAltreia.getHealth() > 0) || (choiceCharacter == 3 && objShang.getHealth() > 0) || (choiceCharacter == 4 && objPalangga.getHealth() > 0)) {
                            break;
                        } else {
                            System.out.println("Invalid choice. Please choose a character that exists.");
                        }
                    } catch (Exception e) {
                        System.out.println("Invalid input! Please enter a valid number.");
                        scanner.next();
                    }
                }

                int choiceAttack = 0;

                while (choiceAttack < 1 || choiceAttack > 5) {
                    if (choiceCharacter == 1) {
                        System.out.println("\n------------------------------------------");
                        System.out.println("|              SICS KINGDOM              |");
                        System.out.println("------------------------------------------");
                        System.out.println("Round: " + roundCounter);
                        System.out.println("You have entered as \'Kamadan\'");
                        System.out.print("Kamadan's HP: " + objKamadan.getHealth() + " | Mana: " + objKamadan.getMana() + "\n");
                        System.out.println(objKhaiamanan.getName() + "'s HP: " + objKhaiamanan.getHealth());

                        System.out.println("\nChoose your attack:");
                        System.out.println("1. Syntax Sleuth (30 damage, 20 mana)");
                        System.out.println("2. Logic Master (40 damage, 60 mana)");
                        System.out.println("3. Loop Ninja (30 damage, 20 mana)");
                        System.out.println("4. Mana Regeneration (15 damage, +20 mana)");
                    } else if (choiceCharacter == 2) {
                        System.out.println("\n------------------------------------------");
                        System.out.println("|              SICS KINGDOM              |");
                        System.out.println("------------------------------------------");
                        System.out.println("Round: " + roundCounter);
                        System.out.println("You have entered as \'Altreia\'");
                        System.out.print("Altreia's HP: " + objAltreia.getHealth() + " | Mana: " + objAltreia.getMana() + "\n");
                        System.out.println(objKhaiamanan.getName() + "'s HP: " + objKhaiamanan.getHealth());

                        System.out.println("\nChoose your attack:");
                        System.out.println("1. Code Catalyst (20 damage, 15 mana)");
                        System.out.println("2. Focus Shield (35 damage, 50 mana)");
                        System.out.println("3. Syntax Strike (45 damage, 70 mana)");
                        System.out.println("4. Mana Regeneration (15 damage, +20 mana)");
                    } else if(choiceCharacter == 3){
                        System.out.println("\n------------------------------------------");
                        System.out.println("|              SICS KINGDOM              |");
                        System.out.println("------------------------------------------");
                        System.out.println("Round: " + roundCounter);
                        System.out.println("You have entered as \'Shang\'");
                        System.out.print("Shang's HP: " + objShang.getHealth() + " | Mana: " + objShang.getMana() + "\n");
                        System.out.println(objKhaiamanan.getName() + "'s HP: " + objKhaiamanan.getHealth());

                        System.out.println("\nChoose your attack:");
                        System.out.println("1. Barrier Boost (25 damage, 40 mana)");
                        System.out.println("2. Skill Swap (40 damage, 60 mana)");
                        System.out.println("3. Pathfinder (50 damage, 70 mana)");
                        System.out.println("4. Mana Regeneration (15 damage, +20 mana)");
                    } else {
                        System.out.println("\n------------------------------------------");
                        System.out.println("|             SIITYOU KINGDOM            |");
                        System.out.println("------------------------------------------");
                        System.out.println("Round: " + roundCounter);
                        System.out.println("You have entered as \'Palangga\'");
                        System.out.print("Palangga's HP: " + objPalangga.getHealth() + " | Mana: " + objPalangga.getMana() + "\n");
                        System.out.println(objKhaiamanan.getName() + "'s HP: " + objKhaiamanan.getHealth());

                        System.out.println("\nChoose your attack:");
                        System.out.println("1. LoveyDovey (1000 damage, 0 mana)");
                        System.out.println("2. Nikaon Naka, Langga? (1000 damage, 0 mana)");
                        System.out.println("3. Tulog Na, Langga (1000 damage, 0 mana)");
                        System.out.println("4. I Love You, Langa (1000 damage, +20 mana)");
                    }
                    try {
                        System.out.print("\nEnter Attack: ");
                        choiceAttack = scanner.nextInt();
                        if (choiceAttack < 1 || choiceAttack > 4) {
                            System.out.println("Invalid Attack! Please enter a number between 1 and 4.");
                        }
                    } catch (Exception e) {
                        System.out.println("Invalid input! Please enter a valid number.");
                        scanner.next();
                    }
                }

                int attackDamage;
                if (choiceCharacter == 1) {
                    attackDamage = objKamadan.attack(choiceAttack);
                } else if (choiceCharacter == 2) {
                    attackDamage = objAltreia.attack(choiceAttack);
                } else if (choiceCharacter == 3){
                    attackDamage = objShang.attack(choiceAttack);
                } else{
                    attackDamage = objPalangga.attack(choiceAttack);
                }

                if (attackDamage >= 0) {
                    objKhaiamanan.setHealth(objKhaiamanan.getHealth() - attackDamage);
                    if(objKhaiamanan.getHealth() < 0){
                        objKhaiamanan.setHealth(0);
                    }
                    System.out.println("You deal " + attackDamage + " damage to " + objKhaiamanan.getName() + "!");
                } else if (attackDamage == -1) {
                    simulateTyping("Invalid choice!");
                } else {
                    System.out.println("Not enough mana! You cannot attack.");
                }

                int enemyDamage = 0;

                if (objKhaiamanan.getHealth() > 0) {
                    int skillChoice = random.nextInt(3); 
                    String skillUsed = "";

                    if (skillChoice == 0) {
                        enemyDamage = random.nextInt(46); 
                        skillUsed = "Cycle Trap";
                    } else if (skillChoice == 1) {
                        enemyDamage = random.nextInt(56); 
                        skillUsed = "Surge";
                    } else if (skillChoice == 2) {
                        enemyDamage = random.nextInt(71); 
                        skillUsed = "Error Spike";
                    }
                    System.out.println(objKhaiamanan.getName() + " uses " + skillUsed + "! It deals " + enemyDamage + " damage.");
                }

                if (choiceCharacter == 1) {
                    objKamadan.setHealth(objKamadan.getHealth() - enemyDamage);
                    if (objKamadan.getHealth() < 0) {
                        System.out.println("Kamadan collapses to the ground, her vision fading. The laughter of her foes echoes as the screen fades to black...");
                        objKamadan.setHealth(0);
                    }
                } else if (choiceCharacter == 2) {
                    objAltreia.setHealth(objAltreia.getHealth() - enemyDamage);
                    if (objAltreia.getHealth() < 0) {
                        System.out.println("Altreia collapses to the ground, her vision fading. The laughter of her foes echoes as the screen fades to black...");
                        objAltreia.setHealth(0);
                    }
                } else if(choiceCharacter == 3){
                    objShang.setHealth(objShang.getHealth() - enemyDamage);
                    if (objShang.getHealth() < 0) {
                        System.out.println("Shang collapses to the ground, her vision fading. The laughter of her foes echoes as the screen fades to black...");
                        objShang.setHealth(0);
                    }
                } else{
                    objPalangga.setHealth(objPalangga.getHealth() - enemyDamage);
                    if(objPalangga.getHealth() < 0){
                        System.out.println("Palangga collapses to the ground, her vision fading. The laughter of her foes echoes as the screen fades to black...");
                        objPalangga.setHealth(0);
                    }
                }
                
                if (objKamadan.getHealth() <= 0 && objAltreia.getHealth() <= 0 && objShang.getHealth() <= 0) {
                    System.out.println("Kamadan, Altreia, and Shang have collapse to the ground, their vision fading. The laughter of her foes echoes as the screen fades to black...");
                    objStoryLine.gameover();
                    break;
                }
                roundCounter++;
            }
                if (objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() > 0 && objAltreia.getHealth() <= 0 && objShang.getHealth() <= 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Kamadan and Palangga have defeated " + objKhaiamanan.getName() + "!");
                } else if (objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() <= 0 && objAltreia.getHealth() > 0 && objShang.getHealth() <= 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Altreia and Palangga have defeated " + objKhaiamanan.getName() + "!");
                } else if (objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() <= 0 && objAltreia.getHealth() <= 0 && objShang.getHealth() > 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Shang and Palangga have defeated " + objKhaiamanan.getName() + "!");
                } else if (objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() > 0 && objAltreia.getHealth() > 0 && objShang.getHealth() > 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! All heroes have defeated " + objKhaiamanan.getName() + "!");
                }else if(objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() > 0 && objAltreia.getHealth() > 0 && objShang.getHealth() <= 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Kamadan, Altreia and Palangga have defeated " + objKhaiamanan.getName() + "!");
                }else if(objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() > 0 && objAltreia.getHealth() <= 0 && objShang.getHealth() > 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Kamadan, Shang and Palangga have defeated " + objKhaiamanan.getName() + "!");
                }else if(objKhaiamanan.getHealth() <= 0 && objKamadan.getHealth() <= 0 && objAltreia.getHealth() > 0 && objShang.getHealth() > 0 && objPalangga.getHealth() > 0){
                    simulateTyping("Congratulations! Altreia, Shang, and Palangga have defeated " + objKhaiamanan.getName() + "!");
                }
        }
        boolean restartOver = true;
        scanner.nextLine();
        
        objStoryLine.gameLogo();

            while (restartOver) {
                System.out.print("\t\t\t\t\tDo you want to enter the game? (Yes/No): ");
                String option = scanner.nextLine();

                if (option.equalsIgnoreCase("Yes")) {
                    while (restartOver) {
                    System.out.print("\t\t\t\t\tDo you want to skip the storyline? (Yes/No): ");
                    String optionStoryLine = scanner.nextLine();
                        try {
                            if (optionStoryLine.equalsIgnoreCase("Yes")) {
                                
                                resetStats(objKamadan, objAltreia, objShang);

                                objStoryLine.questOne();
                                objThirdStreet.enter(); 
                                objThirdStreet.startQuest();
                                objSiITYou.enter();
                                objSiITYou.startQuest();
                                objSiCS.enter();
                                objSiCS.startQuest();
                                restartOver = false;
                            }else if (optionStoryLine.equalsIgnoreCase("No")) {
                                resetStats(objKamadan, objAltreia, objShang);
                                
                                objStoryLine.prologue();
                                objStoryLine.questOne();
                                objThirdStreet.enter();
                                objThirdStreet.startQuest();
                                objSiITYou.enter();
                                objSiITYou.startQuest();
                                objSiCS.enter();
                                objSiCS.startQuest();
                                restartOver = false;
                            }else {
                                System.out.println("\t\t\t\t\tInvalid Input. Enter either YES/NO only\n");
                            }
                        } catch (Exception e) {
                            scanner.nextLine();
                        }
                    }
                } else if (option.equalsIgnoreCase("No")) {
                    System.out.print("\t\t\t\t\tI WILL ALWAYS FIND MY WAY BACK TO YOU");
                    break;
                } else {
                    System.out.println("\t\t\t\t\tInvalid Input. Enter either YES/NO only\n");
                }
            }
        }
    }
